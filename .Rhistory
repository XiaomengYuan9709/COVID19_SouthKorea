library(ggplot2)
setwd("~/Documents/GitHub/COVID19_SouthKorea")
data <- read.csv("Covid19_KCDC_Geo.csv")
View(data)
data <- read.csv("Covid19_KCDC_Geo.csv")
View(data)
summary(data)
summary(data$location)
data$ID <- as.factor(data$ID)
summary(data$ID)
ifelse(data$ID[i]==1 || data$ID[i]==4 || data$ID[i]==5 || data$ID[i]==7 ||
data$ID[i]==11 || data$ID[i]==15 || data$ID[i]==16 ||data$ID[i]==17,
data$level[i] <- "city", data$level[i] <- "province")}
ifelse(data$ID[i]==1 || data$ID[i]==4 || data$ID[i]==5 || data$ID[i]==7 ||
data$ID[i]==11 || data$ID[i]==15 || data$ID[i]==16 ||data$ID[i]==17,
data$level[i] <- "city", data$level[i] <- "province")}
data$level <- rep(NA, 1114)
# add column level, city vs. province
for (i in 1:1114) {
ifelse(data$ID[i]==1 || data$ID[i]==4 || data$ID[i]==5 || data$ID[i]==7 ||
data$ID[i]==11 || data$ID[i]==15 || data$ID[i]==16 ||data$ID[i]==17,
data$level[i] <- "city", data$level[i] <- "province")
}
data$level <- as.factor(data$level)
summary(data$level)
504/63
# convert to date object
data$date <- as.Date(data$date)
data <- read.csv("Covid19_KCDC_Geo.csv")
summary(data)
summary(data$location)
data$ID <- as.factor(data$ID)
summary(data$ID)
data$level <- rep(NA, 1114)
# add column level, city vs. province
for (i in 1:1114) {
ifelse(data$ID[i]==1 || data$ID[i]==4 || data$ID[i]==5 || data$ID[i]==7 ||
data$ID[i]==11 || data$ID[i]==15 || data$ID[i]==16 ||data$ID[i]==17,
data$level[i] <- "city", data$level[i] <- "province")
}
data$level <- as.factor(data$level)
summary(data$level)
# convert to date object
data$date <- as.Date(data$date)
summary(data$level)
summary(data)
summary(data$location)
data$ID <- as.factor(data$ID)
summary(data$ID)
# delete observations with time=16:00, as most obs w/ time= 0:00 and
# it's closer to 9:00.
data1 <- data[data$time!= "16:00", ]
View(data1)
summary(data1$time)
# delete observations from Airport
data2 <- data1[data1$ID!=0, ]
View(data2)
summary(data2)
row.names(data2) <- 1:1020
1020/17
data2$diff <- c(NA, diff(data2$total))
# check if new (newly confirmed) is equal to diff in total
dv <- which(data2$new!= data2$diff)
dv # rows where new != diff
# check these rows
dr <- data2[dv, ]
View(dr)
data <- read.csv("Covid19_KCDC_Geo.csv")
summary(data)
summary(data$location)
data$ID <- as.factor(data$ID)
summary(data$ID)
data$level <- rep(NA, 1114)
# add column level, city vs. province
for (i in 1:1114) {
ifelse(data$ID[i]==1 || data$ID[i]==4 || data$ID[i]==5 || data$ID[i]==7 ||
data$ID[i]==11 || data$ID[i]==15 || data$ID[i]==16 ||data$ID[i]==17,
data$level[i] <- "city", data$level[i] <- "province")
}
data$level <- as.factor(data$level)
summary(data$level)
# convert to date object
data$date <- as.Date(data$date)
# delete observations with time=16:00, as most obs w/ time= 0:00 and
# it's closer to 9:00.
data1 <- data[data$time!= "16:00", ]
# delete observations from Airport
data2 <- data1[data1$ID!=0, ]
row.names(data2) <- 1:1020
# create a column to represent difference between row i and i-1
data2$diff <- c(NA, diff(data2$total))
# check if new (newly confirmed) is equal to diff in total
dv <- which(data2$new!= data2$diff)
dv
# check these rows
dr <- data2[dv, ]
View(dr)
data <- read.csv("Covid19_KCDC_Geo.csv")
View(data)
summary(data)
summary(data$location)
data$ID <- as.factor(data$ID)
summary(data$ID)
data$level <- rep(NA, 1114)
# add column level, city vs. province
for (i in 1:1114) {
ifelse(data$ID[i]==1 || data$ID[i]==4 || data$ID[i]==5 || data$ID[i]==7 ||
data$ID[i]==11 || data$ID[i]==15 || data$ID[i]==16 ||data$ID[i]==17,
data$level[i] <- "city", data$level[i] <- "province")
}
data$level <- as.factor(data$level)
summary(data$level)
# convert to date object
data$date <- as.Date(data$date)
# delete observations with time=16:00, as most obs w/ time= 0:00 and
# it's closer to 9:00.
data1 <- data[data$time!= "16:00", ]
View(data1)
# delete observations from Airport
data2 <- data1[data1$ID!=0, ]
row.names(data2) <- 1:1020
# create a column to represent difference between row i and i-1
data2$diff <- c(NA, diff(data2$total))
View(data2)
# check if new (newly confirmed) is equal to diff in total
dv <- which(data2$new!= data2$diff)
dv # rows where new != diff
# check these rows
dr <- data2[dv, ]
View(dr)
###plot to check for if values looks correct
p <- ggplot(data3, aes(x=date, y=total)) +
geom_line() +
facet_wrap(~ID)
###plot to check for if values looks correct
p <- ggplot(data2, aes(x=date, y=total)) +
geom_line() +
facet_wrap(~ID)
p
dv # rows where new != diff
p1 <- ggplot(data2, aes(x=date, y=new)) +
geom_line() +
facet_wrap(~ID)
p1
which(diff(data2$total)<0)
########check if total is non-decreasing
nd <-which(diff(data2$total)<0)
nd
summary(data2$new)
####### Check for NA
summary(data2$new)
summary(data2$total)
which(anyNA(data2$total))
which(data2[data2$total==NA,])
data2[data2$total==NA,]
View(data2)
summary(data2$total)
data2[data2$total=="NA",]
summary(data2$total)
View(data2)
which(is.na(data2$total))
save.image("~/Documents/GitHub/COVID19_SouthKorea/Kobs.RData")
1020/17
dv # rows where new != diff, a few cases
library(surveillance)
data(measlesWeserEms)
measlesWeserEms@observed
View(measlesWeserEms)
head(measlesWeserEms@observed)
View(measlesWeserEms)
measlesWeserEms@map@polygons[[1]]@Polygons[[1]]
measlesWeserEms@map@polygons[[1]]@Polygons[[1]]
measlesWeserEms@map@proj4string@projargs
View(measlesWeserEms)
head(measlesWeserEms@observed)
tail(measlesWeserEms@observed)
library(tidyr)
###### create t*i maxtrix for sts object
obs <- spread(data2, location, new)
View(obs)
###### create t*i maxtrix for sts object
data2<-as.data.frame(data2)
obs <- spread(data2, location, new)
View(obs)
###### create t*i maxtrix for sts object
data3<-data2[c(2,3,6),]
View(data3)
View(data2)
###### create t*i maxtrix for sts object
data3<-data2[ ,c(2,3,6)]
obs <- spread(data3, location, new)
summary(obs)
plot(obs)
View(data3)
plot(data3)
View(measlesWeserEms)
measlesWeserEms@neighbourhood
setwd("~/Documents/Career/Skills/Statistics/modeling/nCoV2019/Korea_map/KOR_adm")
library(rgdal)
library(rgeos)
library(maptools)
library(sf)
library(ggplot2)
library(surveillance)
library(plyr)
library(latticeExtra)
library(raster)
library(surveillance)
drv <- "ESRI Shapefile"
kmap <- readOGR(".", layer = "KOR_adm1")
#############################################################
# simplify map to reduce size and speed up plotting
kmap1 <- gSimplify(kmap, tol=.01)
kmap2<- SpatialPolygonsDataFrame(kmap1, kmap@data)
sapply(slot(kmap, "polygons"), slot, "area") # check areas of each of 17 polygons
# calculate the matrix of adjacency orders
korder <- nbOrder(poly2adjmat(kmap2), maxlag = 10)
View(korder)
measlesWeserEms@neighbourhood
View(kmap2)
kmap2@data[["NAME_1"]]
measlesWeserEms@observed
measlesWeserEms@populationFrac
head(measlesWeserEms@populationFrac)
tail(measlesWeserEms@populationFrac)
View(kmap2)
kmap2@data[["NAME_1"]]
View(obs)
setwd("~/Documents/GitHub/COVID19_SouthKorea")
################population data
#website:http://www.citypopulation.de/php/southkorea-admin.php
pdata<- read.csv(kop.csv)
################population data
#website:http://www.citypopulation.de/php/southkorea-admin.php
pdata<- read.csv(kop.csv)
################population data
#website:http://www.citypopulation.de/php/southkorea-admin.php
pdata<- read.csv("kop.csv")
################population data
#website:http://www.citypopulation.de/php/southkorea-admin.php
pdata<- read.csv("kpop.csv")
View(pdata)
View(measlesWeserEms)
